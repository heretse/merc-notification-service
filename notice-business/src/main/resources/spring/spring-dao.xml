<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:contex="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置整合mybatis过程-->
    <!-- 1、配置数据库相关参数-->
    <contex:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2、配置数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"   init-method="init" destroy-method="close" >
        <!-- 配置链接属性-->
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
        <property name="initialSize" value="1" /><!-- 配置初始化连接池数量-->  
        <property name="minIdle" value="1" /><!-- 配置最小连接池数量-->  
        <property name="maxActive" value="20" /><!-- 配置最大连接池数量-->  
        <property name="maxWait" value="60000" /><!-- 配置获取连接等待超时的时间 单位毫秒-->  
        <property name="useUnfairLock" value="true"/><!--使用非公平锁-->  
        <property name="timeBetweenEvictionRunsMillis" value="60000" /><!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="300000" /><!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="validationQuery" value="SELECT 'x'" /><!--用来检测连接是否有效的sql，要求是一个查询语句。-->  
        <property name="testWhileIdle" value="true" /><!--申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。-->  
        <property name="testOnBorrow" value="true" /><!--申请连接时执行validationQuery检测连接是否有效，-->  
        <property name="testOnReturn" value="false" /><!--归还连接时执行validationQuery检测连接是否有效，-->  
        <property name="poolPreparedStatements" value="true" /><!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
        <property name="maxOpenPreparedStatements" value="20" />  
        <property name="filters" value="stat" /><!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
     </bean>

    <!-- 3、配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置mybatis全局配置文件：mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包，使用别名，多个用;隔开-->
        <property name="typeAliasesPackage" value="com.bp.notice.business.entity;com.bp.notice.business.model"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描的Dao接口-->
        <property name="basePackage" value="com.bp.notice.business.dao"/>
    </bean>
	<!-- 获得Spring 上下文 -->
	<bean id="springContextUtil" class="com.bp.notice.business.utils.SpringContextUtil"></bean>
   
</beans>